services:
  postgres:
    image: postgres:16-alpine
    container_name: astroneko_postgres_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: astroneko_dev
      POSTGRES_USER: astro
      POSTGRES_PASSWORD: astro123
    ports:
      - "5434:5432"
    volumes:
      - astroneko_postgres_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U astro -d astroneko_dev"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - astroneko_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: astroneko_backend_dev
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/astroneko_dev
      SPRING_DATASOURCE_USERNAME: astro
      SPRING_DATASOURCE_PASSWORD: astro123
      SERVER_PORT: 8080
      SPRING_DEVTOOLS_RESTART_ENABLED: true
      SPRING_DEVTOOLS_LIVERELOAD_ENABLED: true
      SPRING_JPA_SHOW_SQL: true
      LOGGING_LEVEL_ROOT: INFO
    ports:
      - "8083:8080"
      - "5005:5005" # Debug port
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - astroneko_network
    develop:
      watch:
        - action: sync
          path: ./backend/src
          target: /app/src
          ignore:
            - target/
            - .mvn/
        - action: rebuild
          path: ./backend/pom.xml

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: astroneko_frontend_dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:8083
      NEXT_TELEMETRY_DISABLED: 1
    ports:
      - "3001:3000"
    depends_on:
      - backend
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - astroneko_network
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules/
            - .next/
            - .git/
            - Dockerfile*
            - README.md
        - action: rebuild
          path: ./frontend/package.json

volumes:
  astroneko_postgres_dev:

networks:
  astroneko_network:
    driver: bridge
